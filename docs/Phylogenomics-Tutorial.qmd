---
title: "Phylogenomics Tutorial"
subtitle: "Phylogenomic reconstruction of bacterial genomes"
author: "Efthymios Parisis"

execute: 
  cache: true
  warning: false
  message: false

format:
  html:
      # Make self contained
      embed-resources: true

      # Table of Contents
      toc: true
      toc-title: Contents
      toc-depth: 3
      toc-expand: 2
      anchor-sections: true
      number-sections: false

      # Code Options
      code-fold: false
      code-tools: true
      code-copy: hover
      code-annotations: hover
      code-overflow: scroll

      # Figure Options
      fig-format: png
      fig-width: 18
      fig-height: 12
      # Dataframe options
      df-print: paged
      # Code links
      code-link: true

      theme: darkly
---

# Simple Bacterial Phylogenomic reconstruction

## Overview

This is a simple bacterial phylogenomic reconstruction pipeline.

## Running this tutorial with Github Codespaces

You can run this tutorial with Github Codespaces by clicking the button below:

[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](repo-link)

## Requirements for local installation

- [WSL for windows](https://learn.microsoft.com/en-us/windows/wsl/install) users.
- [homebrew](https://brew.sh/) for macos users.
- [MicroMamba](https://mamba.readthedocs.io/en/latest/) (conda replacement, if already have conda installed you can skip this).
  - Download and install the latest version of MicroMamba for your operating system from the [MicroMamba github repo](https://github.com/mamba-org/micromamba-releases/releases).
  - For windows install the version compatible with your [WSL](https://github.com/conda-forge/miniforge?tab=readme-ov-file#windows-subsystem-for-linux-wsl).
  - For macos do not install the arm64 version (even if you are using an arm64 mac - M chips).
- [VSCode](https://code.visualstudio.com/).
  - [Setup VSCode to run on WSL](https://code.visualstudio.com/docs/remote/wsl) for windows users.

## Gene identification and alignment with [`GTDB-Tk`](https://github.com/Ecogenomics/GTDBTk)

We will use GTDB-Tk for our:

1. Core gene identification.
2. Core gene extraction.
3. Alignment of core genes.

### Installation

```bash
mamba create -n phylo -c bioconda python=3.9 gtdbtk
```

Activate the environment and set the database path as instructed by the installation prompt:

```bash
mamba activate phylo
conda env config vars set GTDBTK_DATA_PATH="../gtdbtk_mock_db"
```

Check the installation:

```bash
gtdbtk check_install
```

We will get an OK for the software dependencies and a warning about the database since we are using the mock database and not the real GTDB database.

### Running GTDB-Tk

We will follow the [GTDB-Tk tutorial](https://ecogenomics.github.io/GTDBTk/examples/classify_wf.html) to get started.

Create a work direcroty where we will store our data:

```bash
mkdir -p work
cd work
```
#### Gene calling (identify)

First we need to identify the core bacterial genes in our genomes.

```bash
gtdbtk identify --genome_dir ../Genomes/ --out_dir gtdbtk_out/identify/ --extension gz --cpus 4
```

#### Gene Alignment (align)

Next we need to align the core genes we identified to the ones in the GTDB database.

We use a heavily subsampled version of the GTDB database in our turorial (`gtdbtk_mock_db`). The full GTDB is aprox. ~140 GB large and needs ~110GB (690 GB when using â€“full_tree) of memory to run these steps.

```bash
gtdbtk align --identify_dir gtdbtk_out/identify/ --out_dir gtdbtk_out/align/ --cpus 4
```

The `gtdbtk.bac120.user_msa.fasta.gz` file is the alignment file we will use for our phylogenetic reconstruction and consists only of our genomes.

The `gtdbtk.bac120.msa.fasta.gz` file is the alignment consists all genomes in the GTDB database that have been aligned with our genomes.

You can inspect the contents of the alignment file in your code editor or by using a tool like `alv` (command line tool) or `AliView` (GUI tool).

Example for `alv`:

```bash
pip install alv
gunzip gtdbtk_out/align/align/gtdbtk.bac120.msa.fasta.gz
alv -w 100 -k gtdbtk_out/align/align/gtdbtk.bac120.msa.fasta | less -R
```

## Phylogenetic reconstruction with [`IQ-TREE`](https://iqtree.github.io/)

We will use `IQ-TREE` to reconstruct the phylogeny of our genomes. `IQ-TREE` is a fast, accurate and memory-efficient phylogenetic tree inference program. It supports a wide range of phylogenetic substitution models and can handle large datasets. It has very good documentation and has a large set of other helper tools incorporated which makes it a very versatile tool.

Two of these tools which we are going to use are:

1. Ultrafast bootstrap (`UFBoot`) for faster bootstrapping.
2. Ultrafast model selection (`ModelFinder`) for automated model selection.

### Installation

On the `phylo` environment we are already in use:

```bash
mamba install -c bioconda iqtree
```

Move the alignment file to the work directory and unzip it:

```bash
mv gtdbtk_out/align/align/gtdbtk.bac120.user_msa.fasta.gz . && gunzip gtdbtk.bac120.user_msa.fasta.gz
```

### Running `IQ-TREE`

`IQ-TREE` will run on our alignment file we created earlier

#### Running ModelFinder (Optional)

As mentioned we can use `ModelFinder` to automatically select the best model for our data. We can also just run `ModelFinder` by itself to get a list of models and their support values.

```bash
iqtree -s gtdbtk.bac120.user_msa.fasta -m TESTONLY
```

#### Running IQ-TREE for phylogenetic reconstruction

```bash
iqtree -s gtdbtk.bac120.user_msa.fasta -T 6
```
